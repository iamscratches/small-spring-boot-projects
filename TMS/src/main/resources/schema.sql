--CREATE DATABASE IF NOT EXISTS TMS DEFAULT CHARSET = utf8;
--USE TMS;

DROP TABLE IF EXISTS VEHICLE;
CREATE TABLE VEHICLE (
	  VEHICLE_ID 		INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	  MODEL_NO 			VARCHAR(255) NOT NULL,
	  MODEL_NAME 		VARCHAR(255) NOT NULL,
	  VEHICLE_TYPE 		INTEGER NOT NULL,
	  COLOR 			VARCHAR(255) DEFAULT NULL,
	  OWNER_ID 			INTEGER DEFAULT NULL,
	  MANUFACTURER_ID 	INTEGER NOT NULL,
	  DOM 				DATE NOT NULL,						-- DATE OF MANUFACTURE
	  NOC 				INTEGER DEFAULT NULL,				-- NO. OF CYLINDERS
	  CC 				INTEGER DEFAULT NULL,				-- CUBIC CAPACITY
	  FUEL_USED 		INTEGER DEFAULT NULL,
	  TRAVELLED_KM 		INTEGER DEFAULT NULL,
	  LPC 				DATE NOT NULL,						-- LAST POLLUTION CHECK
	  EXPIRED 			BOOLEAN DEFAULT TRUE
);

DROP TABLE IF EXISTS OWNER;
CREATE TABLE OWNER (
	  OWNER_ID			INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	  FNAME 			VARCHAR(255) NOT NULL,
	  LNAME 			VARCHAR(255) DEFAULT NULL,
	  DOB 				DATE NOT NULL,
	  LANDLINE_NO 		DECIMAL(12,0) DEFAULT NULL,
	  MOBILE_NO 		DECIMAL(10,0) NOT NULL,
	  GENDER 			CHAR(1) NOT NULL,
	  TEMP_ADDR 		VARCHAR(255) DEFAULT NULL,
	  PERM_ADDR 		VARCHAR(255) NOT NULL,
	  PINCODE 			DECIMAL(6,0) NOT NULL,
	  STATE_CODE 		CHAR(2) NOT NULL,
	  OCCUPATION 		VARCHAR(255) DEFAULT NULL,
	  ADHAAR 			CHAR(12) NOT NULL,
	  PANCARD 			CHAR(10) DEFAULT NULL,
	  ADD_PROOF_NAME 	VARCHAR(255) NOT NULL
);

DROP TABLE IF EXISTS REGISTRATION;
CREATE TABLE REGISTRATION (
  APP_NO 				INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
  VEHICLE_ID 			INTEGER NOT NULL UNIQUE,
  VEHICLE_NO 			INTEGER NOT NULL UNIQUE,
  OWNER_ID 				INTEGER NOT NULL,
  DATE_OF_RETENTION 	DATE NOT NULL,
  VALID 				BOOLEAN DEFAULT FALSE,
  DATE_OF_EXPIRY 		DATE DEFAULT NULL
);

DROP TABLE IF EXISTS OFFENCE;
CREATE TABLE OFFENCE (
  OFFENCE_ID 			INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NOF 					VARCHAR(255) DEFAULT NULL,						-- NATURE OF OFFENCE
  VEHICLE_TYPE_ID		INTEGER DEFAULT NULL,
  PENALTY 				INTEGER DEFAULT 0
);

DROP TABLE IF EXISTS OFFENCE_REGISTER;
CREATE TABLE OFFENCE_DETAILS (
  APP_NO				INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
  OFFENCE_ID 			INTEGER NOT NULL,
  VEHICLE_NO 			INTEGER NOT NULL,
  OFFENCE_TIME 			DATETIME NOT NULL,
  PLACE 				VARCHAR(255) DEFAULT NULL,
  REPORTED_BY 			VARCHAR(255) DEFAULT NULL
);

DROP TABLE IF EXISTS USER;
CREATE TABLE USER (
  USERNAME 				VARCHAR(15) NOT NULL PRIMARY KEY,
  PASSWORD 				VARCHAR(255) NOT NULL,
  FNAME					VARCHAR(255) NOT NULL,
  LNAME					VARCHAR(255) NOT NULL,
  CONTACT_NO			DECIMAL(10,0) DEFAULT NULL,
  ADDRESS				VARCHAR(255) DEFAULT NULL
);

DROP TABLE IF EXISTS ROLES;
CREATE TABLE ROLES (
  USERNAME				VARCHAR(15) NOT NULL,
  ROLENAME 				VARCHAR(255) NOT NULL,
  ROLEDESC 				VARCHAR(255) DEFAULT NULL
);

DROP TABLE IF EXISTS TYPE_OF_VEHICLES;
CREATE TABLE TYPE_OF_VEHICLES (
  VEHICLE_TYPE_ID 		INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
  VEHICLE_CATEGORY 		VARCHAR(255) NOT NULL
);

DROP TABLE IF EXISTS MANUFACTURER;
CREATE TABLE MANUFACTURER (
	MANUFACTURER_ID		INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NAME				VARCHAR(255),
	ESTD				DATE NOT NULL,
	LICENSE_DATE		DATE NOT NULL,
	EXPIRY_DATE			DATE NOT NULL,
	EXPIRED				BOOLEAN DEFAULT FALSE
);

ALTER TABLE VEHICLE ADD FOREIGN KEY (VEHICLE_TYPE) REFERENCES TYPE_OF_VEHICLES(VEHICLE_TYPE_ID);
ALTER TABLE VEHICLE ADD FOREIGN KEY (OWNER_ID) REFERENCES OWNER(OWNER_ID);
ALTER TABLE VEHICLE ADD FOREIGN KEY (MANUFACTURER_ID) REFERENCES MANUFACTURER(MANUFACTURER_ID);
ALTER TABLE ROLES ADD FOREIGN KEY (USERNAME) REFERENCES USER(USERNAME);
ALTER TABLE OFFENCE_DETAILS ADD FOREIGN KEY (OFFENCE_ID) REFERENCES OFFENCE(OFFENCE_ID);
ALTER TABLE OFFENCE_DETAILS ADD FOREIGN KEY(VEHICLE_NO) REFERENCES REGISTRATION(VEHICLE_NO);
ALTER TABLE OFFENCE_DETAILS ADD FOREIGN KEY(REPORTED_BY) REFERENCES USER(USERNAME);
ALTER TABLE REGISTRATION ADD FOREIGN KEY(OWNER_ID) REFERENCES OWNER(OWNER_ID);
ALTER TABLE REGISTRATION ADD FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID);
ALTER TABLE OFFENCE ADD FOREIGN KEY (VEHICLE_TYPE_ID) REFERENCES TYPE_OF_VEHICLES(VEHICLE_TYPE_ID);
ALTER TABLE ROLES ADD UNIQUE (USERNAME, ROLENAME);